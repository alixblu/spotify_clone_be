# Generated by Django 3.1.12 on 2025-05-02 10:21

import bson.objectid
from django.db import migrations, models
import django.db.models.deletion
import djongo.models.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('spotify_app', '__first__'),
        ('user_management', '__first__'),
    ]

    operations = [
        migrations.CreateModel(
            name='PlaylistSong',
            fields=[
                ('_id', djongo.models.fields.ObjectIdField(auto_created=True, default=bson.objectid.ObjectId, editable=False, primary_key=True, serialize=False)),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('playlist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='spotify_app.playlist')),
                ('song', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='spotify_app.song')),
            ],
            options={
                'db_table': 'playlist_songs',
                'unique_together': {('playlist', 'song')},
            },
        ),
        migrations.CreateModel(
            name='FavoriteSong',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('song_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='spotify_app.song')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user_management.user')),
            ],
            options={
                'db_table': 'favorite_songs',
                'unique_together': {('user_id', 'song_id')},
            },
        ),
        migrations.CreateModel(
            name='FavoritePlaylist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('playlist_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='spotify_app.playlist')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user_management.user')),
            ],
            options={
                'db_table': 'favorite_playlists',
                'unique_together': {('user_id', 'playlist_id')},
            },
        ),
        migrations.CreateModel(
            name='FavoriteAlbum',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('album_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='spotify_app.album')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user_management.user')),
            ],
            options={
                'db_table': 'favorite_albums',
                'unique_together': {('user_id', 'album_id')},
            },
        ),
        migrations.CreateModel(
            name='ArtistPerform',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('artist_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='spotify_app.artist')),
                ('song_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='spotify_app.song')),
            ],
            options={
                'db_table': 'artist_performances',
                'unique_together': {('artist_id', 'song_id')},
            },
        ),
    ]
